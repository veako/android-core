ext {
    version = [
            retrofit2: "2.9.0",
            lifecycle: "2.2.0",
            glide    : "4.15.0",
            room     : "2.4.3",
            fragment : "1.5.5",


    ]
    core_deps = [
            /**
             * 三个必须库
             */
            kotlinKTX             : "androidx.core:core-ktx:1.8.0",
            // 兼容库
            appcompat             : "androidx.appcompat:appcompat:1.5.1",
            material              : 'com.google.android.material:material:1.9.0',


            // 内部加载中
            loadSir                  : 'com.kingja.loadsir:loadsir:1.3.8',

             // 让集合操作如丝般顺滑
             collectionKTX         : "androidx.collection:collection-ktx:1.2.0",

            //glide
            glide                 : "com.github.bumptech.glide:glide:$version.glide",
            
            // viewModelScope，会在 view 消失时取消协程
            viewModelKTX          : "androidx.lifecycle:lifecycle-viewmodel-ktx:$version.lifecycle",
            // 在 Lifecycles 中使用协程，视图销毁则自动取消
            lifecycleRuntimeKTX      : "androidx.lifecycle:lifecycle-runtime-ktx:$version.lifecycle",


            /**
             * 网络
             */
            //retrofit
            retrofit2             : "com.squareup.retrofit2:retrofit:$version.retrofit2",
            retrofit2GsonConverter: "com.squareup.retrofit2:converter-gson:$version.retrofit2",

            // 简化 Fragment 的 API 调用，同时通过 viewModels 扩展方法创建 vm 来的非常容易
            fragmentKTX           : "androidx.fragment:fragment-ktx:$version.fragment",

            //json
            gson                  : "com.google.code.gson:gson:2.10.1",

            // 数据库
            roomCommon            : "androidx.room:room-common:$version.room",
            roomRuntime           : "androidx.room:room-runtime:$version.room",
            roomCompiler          : "androidx.room:room-compiler:$version.room",
            // 可在 room 中使用协程
            roomKTX               : "androidx.room:room-ktx:$version.room",

    ]
}

/**
 * 添加依赖库的源
 * @param handler repositories
 */
static def addRepository(RepositoryHandler handler) {
    handler.google()
    handler.mavenCentral()
    handler.jcenter()
    handler.maven { url 'https://maven.aliyun.com/repository/google' }
    handler.maven { url 'https://maven.aliyun.com/repository/jcenter' }
    handler.maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
    handler.maven { url "https://www.jitpack.io" }
    handler.maven { url "https://dl.bintray.com/tencentqcloudterminal/maven" }
}